<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>edith_puclla on Percona Community</title><link>https://percona.community/tags/edith_puclla/</link><description>Recent content in edith_puclla on Percona Community</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© Percona Community. MySQL, InnoDB, MariaDB and MongoDB are trademarks of their respective owners.</copyright><lastBuildDate>Wed, 10 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://percona.community/tags/edith_puclla/index.xml" rel="self" type="application/rss+xml"/><item><title>Data on Kubernetes Community initiatives: Automated storage scaling</title><link>https://percona.community/blog/2024/01/10/data-on-kubernetes-community-initiatives/</link><pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate><guid>https://percona.community/blog/2024/01/10/data-on-kubernetes-community-initiatives/</guid><description>In the world of Kubernetes, where everything evolves quickly. Automated storage scaling stands out as a critical challenge. Members of the Data on Kubernetes Community have proposed a solution to address this issue for Kubernetes operators.
If, like me, this is your first time hearing about Automated storage scaling, this will help you understand it better:
Storage scaling in Kubernetes Operators refers to the ability of an application running on Kubernetes to adjust its storage capacity automatically based on demand.</description></item></channel></rss>